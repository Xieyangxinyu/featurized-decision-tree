library(MASS)
library(naniar)
l1 <- read.csv("/Users/wdeng/Desktop/results_l1.csv")
View(l1)
l1 <- read.csv("/Users/wdeng/Desktop/results_l1.csv", header = FALSE)
col_names <- c("data", "n", "dim", "rep", "auc", "mse")
col_names <- c("data", "n", "dim", "rep", "auc", "mse")
l1 <- read.csv("/Users/wdeng/Desktop/results_l1.csv", header = FALSE)[, c(1:4, 6, 7)]
View(l1)
names(l1) <- col_names
l1$l <- 1
l1 <- read.csv("/Users/wdeng/Desktop/results_l3.csv", header = FALSE)[, c(1:4, 6, 7)]
l1 <- read.csv("/Users/wdeng/Desktop/results_l1.csv", header = FALSE)[, c(1:4, 6, 7)]
names(l1) <- col_names
l1$l <- 1
dd <- l1
l1 <- read.csv("/Users/wdeng/Desktop/results_l3.csv", header = FALSE)[, c(1:4, 6, 7)]
names(l1) <- col_names
l1$l <- 3
dd <- rbind(dd, l1)
l1 <- read.csv("/Users/wdeng/Desktop/results_l5.csv", header = FALSE)[, c(1:4, 6, 7)]
l1 <- read.csv("/Users/wdeng/Desktop/results_l5.csv", header = FALSE, fill = TRUE)[, c(1:4, 6, 7)]
View(l1)
names(l1) <- col_names
l1$l <- 5
dd <- rbind(dd, l1)
l1 <- read.csv("/Users/wdeng/Desktop/results_l7.csv", header = FALSE, fill = TRUE)[, c(1:4, 6, 7)]
names(l1) <- col_names
l1$l <- 7
dd <- rbind(dd, l1)
l1 <- read.csv("/Users/wdeng/Desktop/results_l10.csv", header = FALSE, fill = TRUE)[, c(1:4, 6, 7)]
names(l1) <- col_names
l1 <- read.csv("/Users/wdeng/Desktop/results_10.csv", header = FALSE, fill = TRUE)[, c(1:4, 6, 7)]
names(l1) <- col_names
l1$l <- 10
dd <- rbind(dd, l1)
1250*5
View(dd)
file <- na.omit(dd)
file0 <- filter(file, data %in% c("linear", "rbf", "matern32", "complex"))
View(file0)
tmp_mse  <- summarise_at(group_by(file0, data, n, dim, c), vars(auc, mse),
list(~mean(., na.rm = TRUE)))
tmp_mse  <- summarise_at(group_by(file0, data, n, dim, l), vars(auc, mse),
list(~mean(., na.rm = TRUE)))
6250/20
View(tmp_mse)
file0 <- tmp_mse
file0$l <- factor(file0$l, order = T, levels = c(1, 3, 5, 7, 10))
file0$dim <- factor(file0$dim, order = T, levels = c(25, 50, 100, 200))
ggplot(data = file0, aes(x = n, y = auc, color = l))+
scale_colour_manual(values = c("purple", "darkgreen", "orange", "skyblue"))+
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'auc') +
geom_point(size = .5) + theme_set(theme_bw()) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
ggplot(data = file0, aes(x = n, y = auc, color = l))+
scale_colour_manual(values = c("purple", "darkgreen", "orange", "skyblue", "pink"))+
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'auc') +
geom_point(size = .5) + theme_set(theme_bw()) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
320/5
View(file0)
# 8 x 10
dd <- file0[, 1:5]
ggplot(data = dd, aes(x = n, y = auc, color = l))+
scale_colour_manual(values = c("purple", "darkgreen", "orange", "skyblue", "pink"))+
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'auc') +
geom_point(size = .5) + theme_set(theme_bw()) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
View(dd)
ggplot(data = file0, aes(x = n, y = mse, color = l))+
scale_colour_manual(values = c("purple", "darkgreen", "orange", "skyblue", "pink"))+
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'auc') +
geom_point(size = .5) + theme_set(theme_bw()) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
file <- filter(file0, l==10)
View(file)
write.csv(file, "/Users/wdeng/Desktop/mi_rff.csv", row.names=FALSE)
mi_rff <- file
ggplot(data = file0, aes(x = n, y = auc, color = l))+
scale_colour_manual(values = c("purple", "darkgreen", "orange", "skyblue", "pink"))+
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'auc') +
geom_point(size = .5) + theme_set(theme_bw()) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
file <- read.csv("/Users/wdeng/Desktop/FDT/results/20220405/mi/contrast.csv", header = TRUE)
View(file)
file[file$method == "FDT_cat", "method"] <- "FDT"
# file[file$method == "FDT_cat", "method"] <- "FDT"
file <- filter(file, method %in% c("FDT", "RF", "Knockoff","BNN", "BKMR", "BART",
"GAM", "MARS", "BAKR", "BRR", "BL"))
View(file)
View(mi_rff)
dd <- mi_rff[,c(1:3, 5)]
View(dd)
dd$method <- "RFNN"
ss <- rbind(file, dd)
View(ss)
file <- filter(ss, method != "MARS")
file$data <- factor(file$data, order = T, levels = c("linear", "rbf", "matern32", "complex"))
file$method <- factor(file$method, order = T, levels = c("FDT", "RFNN", "RF", "BART", "BKMR", "Knockoff",
"BNN", "GAM", "BAKR", "BRR", "BL"))
ggplot(data = file, aes(x = n, y = auc, color = method, linetype = method))+
scale_colour_manual(values = c("purple", "red", "skyblue", "darkgreen", "blue", "orange",
"brown", "pink", "gray", "limegreen", "yellow4")) +
scale_linetype_manual(values = c("solid", "dotted", "dotted", "dotdash", "dashed", "dotdash",
"dotted", "solid", "dotdash", "dashed", "solid")) +
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'AUC') +
geom_point(size = .5) + theme_set(theme_bw()) + ylim(0, 1) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
class(file$data)
class(file$n)
class(file$dim)
class(file$method)
class(file$auc)
file$n <- as.numeric(file$n)
file$dim <- as.numeric(file$dim)
ggplot(data = file, aes(x = n, y = auc, color = method, linetype = method))+
scale_colour_manual(values = c("purple", "red", "skyblue", "darkgreen", "blue", "orange",
"brown", "pink", "gray", "limegreen", "yellow4")) +
scale_linetype_manual(values = c("solid", "dotted", "dotted", "dotdash", "dashed", "dotdash",
"dotted", "solid", "dotdash", "dashed", "solid")) +
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'AUC') +
geom_point(size = .5) + theme_set(theme_bw()) + ylim(0, 1) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
file <- filter(file, data %in% c("linear", "rbf", "complex"))
file <- filter(file, dim %in% c(25, 100))
ggplot(data = file, aes(x = n, y = auc, color = method, linetype = method))+
scale_colour_manual(values = c("purple", "red", "skyblue", "darkgreen", "blue", "orange",
"brown", "pink", "gray", "limegreen", "yellow4")) +
scale_linetype_manual(values = c("solid", "dotted", "dotted", "dotdash", "dashed", "dotdash",
"dotted", "solid", "dotdash", "dashed", "solid")) +
geom_line() + facet_grid(dim ~ data) + labs(x = "n", y = 'AUC') +
geom_point(size = .5) + theme_set(theme_bw()) + ylim(0, 1) +
theme(axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15),
plot.title = element_text(size = 16), axis.text.x=element_text(size = 12),
axis.text.y=element_text(size = 12)) + theme(legend.position = "top") +
theme(legend.title = element_text(size = 12, face = "bold")) +
theme(legend.text = element_text(size = 12))
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, path = "cont")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_cont.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_cont.csv --dir_out ../results/cont
conda deactivate"
)
write(string, file = paste0("cont_exec", exec_id, ".sh"))
}
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, path = "cat")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_cat.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_cat.csv --dir_out ../results/cat
conda deactivate"
)
write(string, file = paste0("cat_exec", exec_id, ".sh"))
}
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, path = "heart")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_heart.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_heart.csv --dir_out ../results/heart
conda deactivate"
)
write(string, file = paste0("heart_exec", exec_id, ".sh"))
}
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(50, 100, 150, 257),
dim = c(25, 50, 100),
i = 0:19, path = "heart")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_heart.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_heart.csv --dir_out ../results/heart
conda deactivate"
)
write(string, file = paste0("heart_exec", exec_id, ".sh"))
}
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, path = "adult")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_adult.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_adult.csv --dir_out ../results/adult
conda deactivate"
)
write(string, file = paste0("adult_exec", exec_id, ".sh"))
}
# Python
# n = c(50, 100, 150, 257)
# n = c(100, 200, 500, 1000)
setting_total <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, path = "mi")
names(setting_total) <- c("--dataset", "--n_obs", "--dim_in", "--rep", "--path")
write.csv(setting_total, "/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/args/settings_mi.csv")
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/work")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-02:00			#job run 12 hour
#SBATCH -p shared
#SBATCH --mem=80G
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load Anaconda3/2020.11
source activate RFDT
python ../../../src/experimenter.py --rowid ${SLURM_ARRAY_TASK_ID} --subproc ../../../src/var_importance/fdt_simu.py --args ../args/settings_mi.csv --dir_out ../results/mi
conda deactivate"
)
write(string, file = paste0("mi_exec", exec_id, ".sh"))
}
# R methods
setting_total4 <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, data = "cat")
setting_total5 <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, data = "cont")
setting_total1 <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, data = "adult")
setting_total2 <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(50, 100, 150, 257),
dim = c(25, 50, 100),
i = 0:19, data = "heart")
setting_total3 <-
expand.grid(name = c("linear", "rbf", "matern32", "complex"),
n = c(100, 200, 500, 1000),
dim = c(25, 50, 100),
i = 0:19, data = "mi")
setting_total <- rbind(setting_total4, setting_total5, setting_total1, setting_total2, setting_total3)
write.table(setting_total, "/Users/wdeng/Desktop/FDT/FDT/R/settings.txt", sep = ",", row.names = FALSE)
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/R")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-12:00			#job run 12 hour
#SBATCH -p shared			#submit to 'short' queue
#SBATCH --mem=19370  		# use 4 GB memory
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load R/4.1.0-fasrc01
export R_LIBS_USER=$HOME/apps/R_4.1.0:$R_LIBS_USER
Rscript './sim_comp.R' ${SLURM_ARRAY_TASK_ID}"
)
write(string, file = paste0("command_exec", exec_id, ".sh"))
}
# generate cluster bash script
n_run_per_worker <- 1
n_exec <- ceiling(nrow(setting_total) / (n_run_per_worker * 1e3))
setwd("/Users/wdeng/Desktop/FDT/FDT/R")
for (exec_id in 1:n_exec) {
n_rask_rest <-
min(nrow(setting_total)/n_run_per_worker -
(exec_id-1)*1e3, 1e3)
string <-
paste0(
"#!/bin/bash
#SBATCH --array=", (exec_id-1) * 1e3 + 1,
"-", (exec_id-1) * 1e3 + n_rask_rest,
"	    		#job array list goes 1,2,3...n
#SBATCH -c 1
#SBATCH -N 1
#SBATCH -t 0-12:00			#job run 12 hour
#SBATCH -p shared			#submit to 'short' queue
#SBATCH --mem=19370  		# use 4 GB memory
#SBATCH -o %A_%a.out
#SBATCH -e %A_%a.err
#SBATCH --mail-type=END      #Type of email notification
#SBATCH --mail-user=wdeng@g.harvard.edu
module load R/4.1.0-fasrc01
export R_LIBS_USER=$HOME/apps/R_4.1.0:$R_LIBS_USER
Rscript './sim_comp.R' ${SLURM_ARRAY_TASK_ID}"
)
write(string, file = paste0("command_exec", exec_id, ".sh"))
}
library(mgcv)
data <- read.csv("/Users/wdeng/Desktop/FDT/FDT/python/experiments/expr/datasets/cont/linear_n100_d100_i0.csv", row.names = 1)
n=100
df_train <- data[1:n, ]
x_train <- df_train[, -c(1, 2)]
y_train <- df_train[, 2]
# f_train <- df_train[, 1]
df_train <- df_train[, -1]
df_test <- data[(n+1):nrow(data), ]
x_test <- df_test[, -c(1, 2)]
y_test <- df_test[, 2]
# f_test <- df_test[, 1]
df_test <- df_test[, -1]
b <- gam(formula = fmla, data = df_train, select = TRUE, method = "REML")
dim=100
# bstarss
xnam <- paste("x", 1:dim, sep="")
fmla <- as.formula(paste("y ~ ", paste(xnam, collapse= "+")))
b <- gam(formula = fmla, data = df_train, select = TRUE, method = "REML")
library(bkmr)
